// <auto-generated />
using System;
using BoardingService.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoardingService.Infrastructure.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231023082625_AddStatusOnBoarding")]
    partial class AddStatusOnBoarding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardingService.Models.BoardingAggregate.Boarding", b =>
                {
                    b.Property<string>("FlightNr")
                        .HasColumnType("text");

                    b.Property<DateTime>("From")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Gate")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("To")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("FlightNr");

                    b.ToTable("Boardings");
                });

            modelBuilder.Entity("BoardingService.Models.PassengerAggregate.Passenger", b =>
                {
                    b.Property<string>("PassengerId")
                        .HasColumnType("text");

                    b.Property<string>("CheckinNr")
                        .HasColumnType("text");

                    b.Property<string>("FlightNr")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.HasKey("PassengerId", "CheckinNr");

                    b.HasIndex("FlightNr");

                    b.ToTable("Passengers");
                });

            modelBuilder.Entity("BoardingService.Models.PassengerAggregate.Passenger", b =>
                {
                    b.HasOne("BoardingService.Models.BoardingAggregate.Boarding", "Boarding")
                        .WithMany("Passengers")
                        .HasForeignKey("FlightNr")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Boarding");
                });

            modelBuilder.Entity("BoardingService.Models.BoardingAggregate.Boarding", b =>
                {
                    b.Navigation("Passengers");
                });
#pragma warning restore 612, 618
        }
    }
}
